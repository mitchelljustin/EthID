#!/usr/bin/env node
'use strict';
require('localenv');

let path = require('path');
let express = require('express');
let hbs = require('express-handlebars');
let session = require('express-session');
let bodyParser = require('body-parser');
let mongooseSession = require('mongoose-session');
let ContractManager = require('../lib/ContractManager');

let mongoose = require('mongoose');
mongoose.connect(process.env.MONGODB_URI);

let coinbaseManager = new ContractManager('coinbase');
coinbaseManager.start();

let app = express();

app.engine('.hbs', hbs({
    extname: '.hbs',
    layoutsDir: path.resolve('www/layouts'),
    defaultLayout: 'main',
}));
app.set('views', path.resolve('www/views'));
app.set('view engine', '.hbs');

app.set('trust proxy', 1); // trust first proxy

app.use(session({
    key: 'sessions',
    secret: process.env.SESSION_SECRET,
    store: mongooseSession(mongoose),
    resave: false,
    saveUninitialized: true,
    cookie: {}
}));
app.use(bodyParser.urlencoded());

let router = require('../lib/router');

app.use(router);

app.use(express.static(path.resolve('www/public')));
app.use('/bower_components', express.static(path.resolve('www/bower_components')));

app.use((err, req, res, next) => {
    if (err) {
        res.json({
            message: err.message,
            stack: err.stack,
        });
    } else {
        next();
    }
});

let port = process.env.WEB_PORT || 8000;

app.listen(port, () => {
    console.log(`Listening for HTTP on port ${port}`)
});